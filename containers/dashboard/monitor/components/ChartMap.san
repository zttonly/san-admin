<template>
    <s-card title="全国空气质量监控">
        <div class="map-title">
            <div class="title-item" s-for="item in title">
                <div class="title-text">{{item.text}}</div>
                <div class="title-number" s-if="item.key === '2'">
                    {{time}}
                </div>
                <div class="title-number" s-else>{{item.number}}</div>
            </div>
        </div>
        <div id="map-charts"></div>
    </s-card>
</template>

<script>
import {Component} from 'san';
import {Card} from 'santd';
import echarts from 'echarts/lib/echarts';
import 'echarts/lib/chart/scatter';
import 'echarts/lib/chart/effectScatter';
import 'echarts/lib/component/tooltip';
import 'echarts/lib/component/title';
import 'echarts/extension/bmap/bmap';
import dayjs from 'dayjs';
import {cityData, geoCoordMap} from './constant';

const convertData = function(data) {
    const res = [];
    for (let i = 0; i < data.length; i++) {
        let geoCoord = geoCoordMap[data[i].name];
        if (geoCoord) {
            res.push({
                name: data[i].name,
                value: geoCoord.concat(data[i].value)
            });
        }
    }
    return res;
};

const options = {
    tooltip : {
        trigger: 'item'
    },
    bmap: {
        center: [104.114129, 37.550339],
        zoom: 5,
        roam: true,
        mapStyle: {
            styleJson: [{
                'featureType': 'water',
                'elementType': 'all',
                'stylers': {
                    'color': '#d1d1d1'
                }
            }, {
                'featureType': 'land',
                'elementType': 'all',
                'stylers': {
                    'color': '#f3f3f3'
                }
            }, {
                'featureType': 'railway',
                'elementType': 'all',
                'stylers': {
                    'visibility': 'off'
                }
            }, {
                'featureType': 'highway',
                'elementType': 'all',
                'stylers': {
                    'color': '#fdfdfd'
                }
            }, {
                'featureType': 'highway',
                'elementType': 'labels',
                'stylers': {
                    'visibility': 'off'
                }
            }, {
                'featureType': 'arterial',
                'elementType': 'geometry',
                'stylers': {
                    'color': '#fefefe'
                }
            }, {
                'featureType': 'arterial',
                'elementType': 'geometry.fill',
                'stylers': {
                    'color': '#fefefe'
                }
            }, {
                'featureType': 'poi',
                'elementType': 'all',
                'stylers': {
                    'visibility': 'off'
                }
            }, {
                'featureType': 'green',
                'elementType': 'all',
                'stylers': {
                    'visibility': 'off'
                }
            }, {
                'featureType': 'subway',
                'elementType': 'all',
                'stylers': {
                    'visibility': 'off'
                }
            }, {
                'featureType': 'manmade',
                'elementType': 'all',
                'stylers': {
                    'color': '#d1d1d1'
                }
            }, {
                'featureType': 'local',
                'elementType': 'all',
                'stylers': {
                    'color': '#d1d1d1'
                }
            }, {
                'featureType': 'arterial',
                'elementType': 'labels',
                'stylers': {
                    'visibility': 'off'
                }
            }, {
                'featureType': 'boundary',
                'elementType': 'all',
                'stylers': {
                    'color': '#fefefe'
                }
            }, {
                'featureType': 'building',
                'elementType': 'all',
                'stylers': {
                    'color': '#d1d1d1'
                }
            }, {
                'featureType': 'label',
                'elementType': 'labels.text.fill',
                'stylers': {
                    'color': '#999999'
                }
            }]
        }
    },
    series : [
        {
            name: 'pm2.5',
            type: 'scatter',
            coordinateSystem: 'bmap',
            data: convertData(cityData),
            symbolSize: function(val) {
                return val[2] / 10;
            },
            encode: {
                value: 2
            },
            label: {
                formatter: '{b}',
                position: 'right',
                show: false
            },
            emphasis: {
                label: {
                    show: true
                }
            },
            itemStyle: {
                color: 'rgb(61,106,169,.8)',
            },
        },
        {
            name: 'Top 5',
            type: 'effectScatter',
            coordinateSystem: 'bmap',
            data: convertData(cityData.sort(function(a, b) {
                return b.value - a.value;
            }).slice(0, 6)),
            symbolSize: function(val) {
                return val[2] / 10;
            },
            encode: {
                value: 2
            },
            showEffectOn: 'render',
            rippleEffect: {
                brushType: 'stroke'
            },
            hoverAnimation: true,
            label: {
                formatter: '{b}',
                position: 'right',
                show: true
            },
            itemStyle: {
                color: '#91cc75',
                shadowBlur: 10,
                shadowColor: '#333'
            },
            zlevel: 1
        }
    ]
};

export default class ChartMap extends Component {
    static components = {
        's-card': Card
    }

    initData() {
        return {
            title: [
                {
                    key: '0',
                    text: 'PM2.5颗粒物浓度',
                    number: '35~75μg / m³'
                },
                {
                    key: '1',
                    text: '空气质量达标城市比率',
                    number: '91.4%'
                },
                {
                    key: '2',
                    text: '当前时间',
                    number: ''
                },
                {
                    key: '3',
                    text: '平均质量指数',
                    number: '70.63(AQI)'
                },
            ],
            time: ''
        };
    }

    attached() {
        let mapChart = echarts.init(document.getElementById('map-charts'));
        mapChart.setOption(options);
        const bmap = mapChart.getModel().getComponent('bmap').getBMap();
        bmap.addControl(new BMap.MapTypeControl());
        this.setTime();
    }

    setTime() {
        const timer = setInterval(() => {
            this.data.set('time', dayjs().format('HH:mm:ss:SSS'));
        }, 1);
    }
};
</script>

<style lang="less" scoped>
.map-title {
    width: 100%;
    height: 70px;
    display: flex;
    flex-flow: row nowrap;
    .title-item {
        width: 25%;
        height: 100%;
        .title-text {
            margin-bottom: 4px;
            color: rgba(0, 0, 0, .45);
            font-size: 14px;
        }
        .title-number {
            color: rgba(0, 0, 0, .85);
            font-size: 24px;
        }
    }
}
#map-charts {
    width: 100%;
    height: 600px;
}
.BMap_noprint {
    display: none;
}
</style>
